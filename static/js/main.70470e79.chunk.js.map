{"version":3,"sources":["components/header.js","components/footer.js","components/frames/frame.js","components/home.js","components/cv.js","App.js","serviceWorker.js","index.js"],"names":["Burger","useState","display","setDisplay","width","setWidth","useLayoutEffect","updateWidth","window","innerWidth","addEventListener","removeEventListener","useWindowWidth","menuClass","buttonClass","className","onClick","MenuItems","mainClass","props","to","Header","Footer","href","Frame","link","src","img","alt","Placeholder","Home","CVComponent","name","content","CVEntry","date","date_from","date_to","itemList","items","key","map","item","text","employer","title","Education","Employment","CV","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70470e79.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(0);\n  useLayoutEffect(() => {\n    function updateWidth() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', updateWidth);\n    updateWidth();\n    return () => window.removeEventListener('resize', updateWidth);\n  }, []);\n  return width;\n}\n\nfunction Burger () {\n\n  const [display, setDisplay] = useState(false);\n  const width = useWindowWidth();\n\n  let menuClass = display && width <= 800 ? \"drop-down\" : \"hidden\"\n  let buttonClass = display ? \"icon active\" : \"icon\"\n\n  return (\n      <div>\n      <div className={buttonClass} onClick={() => {setDisplay(!display)}}><i className=\"fa fa-bars\"></i></div>\n      <MenuItems mainClass={menuClass}/>\n      </div>\n    );\n}\n\nfunction MenuItems (props) {\n  return (\n    <div className={props.mainClass}>\n      <Link className=\"menu-item\" to='/cv'>CV</Link>     \n    </div>\n  );\n}\n\n//<Link className=\"menu-item\" to='/games'>Games</Link>\n\nfunction Header () {\n  return (\n    <div className=\"header container topnav\">\n      <p className=\"logo-text\"><Link to='/'>Debesh Mandal</Link></p>\n      <div className=\"menu\">\n        <MenuItems mainClass=\"items\"/>\n        <Burger />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport '../App.css';\n\nfunction Footer () {\n  return (\n    <div className=\"footer container\">\n      <a href=\"mailto:debesh@debeshmandal.co.uk\"><p className=\"footer-text\">debesh@debeshmandal.co.uk</p></a>\n    </div> \n  );\n};\n\nexport default Footer;","import React from 'react';\n\nimport '../../styles/frame.css';\n\nfunction Frame (props) {\n    return (\n        <div className='frame'>\n            <a href={props.link}>\n                <img src={props.img} alt={props.alt}/>\n            </a>\n        </div>\n    )\n};\nexport default Frame;","import React from 'react';\nimport Frame from './frames/frame';\n\nfunction Placeholder () {\n  return (\n    <Frame \n      link=\"https://placeholder.com\"\n      img=\"https://via.placeholder.com/150\"\n      alt=\"placeholder\" \n    />)\n}\n\nfunction Home () {\n  return (\n    <div>\n      <div className='row'>\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </div>\n      <div className='row'>\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n        <Placeholder />\n      </div>\n    </div>\n  )\n};\nexport default Home;","import React from 'react';\nimport '../styles/cv.css';\n\nfunction CVComponent (props) {\n  return <div className=\"section\"><h2>{props.name}</h2>{props.content}</div>\n}\n\nfunction CVEntry (props) {\n  if (props.date) {\n    var [date_from, date_to] = props.date;\n  }\n  var itemList = null;\n  if (props.items) {\n    let key = 0;\n    let items = props.items;\n    itemList = items.map((item) => <li key={key} className='CV-item'>{item}</li>);\n    key += 1;\n  }\n  \n  var text = null\n  if (props.text) {\n    text = props.text\n  }\n  return (\n    <div className='CVEntry'>\n      <div className=\"section-header\">\n        <h3 className='employer'>{props.employer}</h3>\n        <p className='date'>{date_from} - {date_to}</p>\n      </div>\n      <div className=\"section-body\">\n        <p className='job-title'>{props.title}</p>\n        { props.items && \n          <ul className=\"CV-summary\">{itemList}</ul>\n        }\n        {\n          props.text && \n          <p className=\"CV-text\">{text}</p>\n        }\n      </div>\n    </div> \n  );\n}\n\nfunction Education () {\n  let content = [\n    <CVEntry \n      employer='Imperial College London' \n      date={['September 2017', 'Present']} \n      title='PhD Materials Research' \n      key={0}\n      text = {`\n        My PhD focuses on different uses of computation materials science \n        for use in advanced healthcare applications. Firstly, I look at \n        developing a model for the condensation of nucleic acids with \n        positively-charged polyelectrolytes for use in gene therapy. Then \n        I have developed models for the controlled release of generic payloads \n        from hydrogel-based drug delivery vectors. Finally I am completing \n        research on advanced design of DNA origami.\n      `}\n      />,\n    <CVEntry \n      employer='Imperial College London' \n      date={['September 2013', 'June 2017']} \n      title='MEng Biomaterials and Tissue Engineering' \n      items={['Achieved Grade 2:1']}\n      key={1}\n      text={`\n        As part of my course, I studied a wide range of materials science topics\n        including metals, glasses, polymers, nanomaterials,\n        thin-film materials, and mechanics. I specialised in\n        biomaterials and tissue engineering, with a Masters project\n        that investigated using diacrylate gels to create\n        microtopographical features using 2PP (two-photon\n        polymerisation), an advanced form of 3D printing on the \n        nanoscale. Alongside this I developed soft and non-technical\n        skills relating to entrepreneurship, business analytics and\n        finance, as well as general skills relating to pitching\n        and creating business cases.\n      `}\n    />,\n    <CVEntry \n      employer='The Manchester Grammar School' \n      date={['September 2007', 'June 2013']} \n      key={2}\n      items = {['A-levels: A*AA', 'GCSEs: 7A*2A1B']}\n    />\n  ];\n  return <CVComponent name='Education' content={content} />\n}\n\nfunction Employment () {\n  let content = [\n    <CVEntry \n      employer='FabricNano' \n      date={['October 2019', 'April 2020']} \n      title='Intern Theoretical Scientist' \n      key={0}\n      text={`\n        My main tasks were around the design and simulation of DNA origami.\n      `}\n      />,\n    <CVEntry \n      employer='Imperial College London' \n      date={['April 2018', 'Present']} \n      title='Graduate Teaching Assistant' \n      key={1}\n      text={`\n        I have completed a variety of teaching courses at Imperial College \n        and have taught Undergraduate and Postgraduate courses in polymer \n        science, Python and LaTeX.\n      `}  \n      />\n  ];\n  return <CVComponent name='Employment' content={content}/>\n}\n\nfunction CV () {\n  return (\n    <div className='App-main'>\n      <Education />\n      <Employment />\n    </div>\n  );\n};\n\nexport default CV;","import React from 'react';\nimport Header from './components/header'\nimport Footer from './components/footer'\n\n\nimport { Route } from \"react-router-dom\";\n\nimport Home from './components/home';\nimport CV from './components/cv';\nimport Games from './components/games'\n\nfunction App() {\n  return ( \n    <div className='App-main'>\n      <Header />\n      <Route exact={true} path=\"/\" component={Home} />\n      <Route path=\"/cv\" component={CV} />\n      <Footer />\n    </div>);\n}\n// <Route path=\"/games\" component={Games} />\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}